{"version":3,"file":"static/js/748.b31dabb6.chunk.js","mappings":"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","sources":["components/comicsList/ComicsList.js","components/pages/ComicsPage.js"],"sourcesContent":["import { useState, useEffect, useRef, useMemo} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\n\r\nimport useMarvelService from '../../services/MarvelService';\r\nimport setContentList from '../../utils/getContentList';\r\nimport './comicsList.scss';\r\n\r\n\r\nconst ComicsList = () => {\r\n\r\n    const {process, setProcess, clearError, getAllComics} = useMarvelService();\r\n    const [comics, setComics] = useState([]);\r\n    const [offset, setOffset] = useState(0);\r\n    const [newItemLoading, setnewItemLoading] = useState(false);\r\n    const [comicsEnd, setComicsEnd] = useState(false);\r\n   \r\n    const onComicsLoaded =  (res) => {\r\n        setComics(comics => [...comics, ...res]);\r\n        setOffset(offset => offset + 8);\r\n        setComicsEnd(() => res.length < 8);\r\n        setnewItemLoading(false);\r\n    }\r\n\r\n    const updateComics = (offset, startSpinner) => {\r\n        clearError();\r\n        startSpinner ? setnewItemLoading(false) : setnewItemLoading(true);\r\n        getAllComics(offset)\r\n            .then(res => onComicsLoaded(res))\r\n            .then(() => setProcess('confirmed'));\r\n    }\r\n\r\n    useEffect(() => {\r\n        updateComics(offset, true);\r\n    }, []);\r\n\r\n    \r\n    useEffect(() => {\r\n   \r\n        if(!comicsEnd) {\r\n            window.addEventListener(\"scroll\", onScroll);\r\n        }\r\n       \r\n        return () => {\r\n           \r\n            window.removeEventListener(\"scroll\", onScroll);\r\n        }\r\n        // eslint-disable-next-line\r\n    }, [offset]);\r\n    \r\n    const onScroll = () => {\r\n        if (window.pageYOffset + document.documentElement.clientHeight >= document.documentElement.scrollHeight) {\r\n            updateComics(offset);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(comicsEnd)\r\n            return () => {window.removeEventListener(\"scroll\", onScroll);}\r\n        // eslint-disable-next-line\r\n    }, [comicsEnd]);\r\n\r\n\r\n    const comicsRef = useRef([]);\r\n\r\n    const onComicsFocus = (id) => {\r\n        if(!comicsRef.current[id].classList.contains('comics__item_focused')) \r\n        comicsRef.current[id].classList.add('comics__item_focused');\r\n    }\r\n\r\n    const onComicsBlur = (id) => {\r\n        comicsRef.current[id].classList.remove('comics__item_focused')\r\n    } \r\n\r\n    const view = (comics) => {\r\n        const items = comics.map(({id, thumbnail, name, price}, i) => {\r\n            return (\r\n                <CSSTransition\r\n                key={i}\r\n                classNames=\"comics__item\"\r\n                timeout={700}>\r\n                    <li \r\n                        className=\"comics__item\" \r\n                        ref={el => comicsRef.current[i] = el}\r\n                        tabIndex={0}\r\n                        onFocus={() => onComicsFocus(i)}\r\n                        onBlur={() => onComicsBlur(i)}\r\n                    >\r\n                        <Link to={`/comics/${id}`} tabIndex={-1}>\r\n                            <img src={thumbnail} alt={name} className=\"comics__item-img\"/>\r\n                            <div className=\"comics__item-name\">{name}</div>\r\n                            <div className=\"comics__item-price\">{price}</div>\r\n                        </Link>\r\n                    </li>\r\n            </CSSTransition>\r\n            )\r\n        }\r\n            \r\n        )\r\n        return (\r\n            <TransitionGroup className=\"comics__grid\" component={'ul'}>\r\n                {items}\r\n            </TransitionGroup>\r\n        );\r\n    }\r\n\r\n    const comicItems = useMemo(() => setContentList(process, () => view(comics), newItemLoading), [process]);\r\n\r\n    return (\r\n        <div className=\"comics__list\">\r\n            {/* {setContentList(process, () => view(comics), newItemLoading)}       */}\r\n            {comicItems}\r\n            <button className=\"button button__main button__long\"\r\n                    onClick={() => \r\n                        updateComics(offset)}\r\n                    disabled={newItemLoading}\r\n                    style={{display: comicsEnd || (process === 'loading' && !newItemLoading) ? 'none' : 'block'}} \r\n            >\r\n                <div className=\"inner\">load more</div>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ComicsList;","import { Helmet } from 'react-helmet';\r\nimport AppBanner from \"../appBanner/AppBanner\";\r\nimport ComicsList from \"../comicsList/ComicsList\";\r\n\r\nconst ComicsPage = () => {\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                name=\"description\"\r\n                content=\"Page with our comics\"\r\n                />\r\n                <title>Comics page</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <ComicsList/>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ComicsPage;"],"names":["useMarvelService","process","setProcess","clearError","getAllComics","useState","comics","setComics","offset","setOffset","newItemLoading","setnewItemLoading","comicsEnd","setComicsEnd","updateComics","startSpinner","then","res","length","onComicsLoaded","useEffect","window","addEventListener","onScroll","removeEventListener","pageYOffset","document","documentElement","clientHeight","scrollHeight","comicsRef","useRef","view","items","map","i","id","thumbnail","name","price","CSSTransition","classNames","timeout","className","ref","el","current","tabIndex","onFocus","classList","contains","add","onComicsFocus","onBlur","remove","onComicsBlur","to","src","alt","TransitionGroup","component","comicItems","useMemo","setContentList","onClick","disabled","style","display","Helmet","content","AppBanner"],"sourceRoot":""}